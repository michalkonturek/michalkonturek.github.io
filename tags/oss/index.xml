<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>oss on Michal Konturek</title><link>https://michal.codes/tags/oss/</link><description>Recent content in oss on Michal Konturek</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 01 Jul 2013 18:19:29 +0100</lastBuildDate><atom:link href="https://michal.codes/tags/oss/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing Unit conversion library</title><link>https://michal.codes/posts/implementing-unit-conversion-library/</link><pubDate>Mon, 01 Jul 2013 18:19:29 +0100</pubDate><guid>https://michal.codes/posts/implementing-unit-conversion-library/</guid><description>Last week I decided to implement unit conversion library for Objective-C called MKUnits. I was fully aware that there were many open-sourced implementation already available, but unfortunately none of them fitted my needs.
I required a library that:
is easily extendable has built-in rounding functionality is precise up to at least 10 decimal places allows manipulation between units of the same group, i.e. kg and pounds, without the need of conversion Quantity Pattern Before I started coding, I had a quick read through the chapter of Analysis Patterns by Martin Fowler, which describes the Quantity Pattern.</description></item></channel></rss>